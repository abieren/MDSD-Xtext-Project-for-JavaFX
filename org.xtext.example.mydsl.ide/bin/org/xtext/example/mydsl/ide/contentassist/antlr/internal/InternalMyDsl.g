/*
 * generated by Xtext 2.19.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}
@parser::members {
	private MyDslGrammarAccess grammarAccess;

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleDomainmodel
entryRuleDomainmodel
:
{ before(grammarAccess.getDomainmodelRule()); }
	 ruleDomainmodel
{ after(grammarAccess.getDomainmodelRule()); } 
	 EOF 
;

// Rule Domainmodel
ruleDomainmodel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainmodelAccess().getElementsAssignment()); }
		(rule__Domainmodel__ElementsAssignment)*
		{ after(grammarAccess.getDomainmodelAccess().getElementsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFrame
entryRuleFrame
:
{ before(grammarAccess.getFrameRule()); }
	 ruleFrame
{ after(grammarAccess.getFrameRule()); } 
	 EOF 
;

// Rule Frame
ruleFrame 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFrameAccess().getGroup()); }
		(rule__Frame__Group__0)
		{ after(grammarAccess.getFrameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContainer
entryRuleContainer
:
{ before(grammarAccess.getContainerRule()); }
	 ruleContainer
{ after(grammarAccess.getContainerRule()); } 
	 EOF 
;

// Rule Container
ruleContainer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainerAccess().getGroup()); }
		(rule__Container__Group__0)
		{ after(grammarAccess.getContainerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContainerReference
entryRuleContainerReference
:
{ before(grammarAccess.getContainerReferenceRule()); }
	 ruleContainerReference
{ after(grammarAccess.getContainerReferenceRule()); } 
	 EOF 
;

// Rule ContainerReference
ruleContainerReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainerReferenceAccess().getGroup()); }
		(rule__ContainerReference__Group__0)
		{ after(grammarAccess.getContainerReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLayout
entryRuleLayout
:
{ before(grammarAccess.getLayoutRule()); }
	 ruleLayout
{ after(grammarAccess.getLayoutRule()); } 
	 EOF 
;

// Rule Layout
ruleLayout 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLayoutAccess().getGroup()); }
		(rule__Layout__Group__0)
		{ after(grammarAccess.getLayoutAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSize
entryRuleSize
:
{ before(grammarAccess.getSizeRule()); }
	 ruleSize
{ after(grammarAccess.getSizeRule()); } 
	 EOF 
;

// Rule Size
ruleSize 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSizeAccess().getGroup()); }
		(rule__Size__Group__0)
		{ after(grammarAccess.getSizeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleText
entryRuleText
:
{ before(grammarAccess.getTextRule()); }
	 ruleText
{ after(grammarAccess.getTextRule()); } 
	 EOF 
;

// Rule Text
ruleText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextAccess().getGroup()); }
		(rule__Text__Group__0)
		{ after(grammarAccess.getTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheckboxChoice
entryRuleCheckboxChoice
:
{ before(grammarAccess.getCheckboxChoiceRule()); }
	 ruleCheckboxChoice
{ after(grammarAccess.getCheckboxChoiceRule()); } 
	 EOF 
;

// Rule CheckboxChoice
ruleCheckboxChoice 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckboxChoiceAccess().getGroup()); }
		(rule__CheckboxChoice__Group__0)
		{ after(grammarAccess.getCheckboxChoiceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGuiElement
entryRuleGuiElement
:
{ before(grammarAccess.getGuiElementRule()); }
	 ruleGuiElement
{ after(grammarAccess.getGuiElementRule()); } 
	 EOF 
;

// Rule GuiElement
ruleGuiElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGuiElementAccess().getAlternatives()); }
		(rule__GuiElement__Alternatives)
		{ after(grammarAccess.getGuiElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTextfield
entryRuleTextfield
:
{ before(grammarAccess.getTextfieldRule()); }
	 ruleTextfield
{ after(grammarAccess.getTextfieldRule()); } 
	 EOF 
;

// Rule Textfield
ruleTextfield 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTextfieldAccess().getGroup()); }
		(rule__Textfield__Group__0)
		{ after(grammarAccess.getTextfieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLabel
entryRuleLabel
:
{ before(grammarAccess.getLabelRule()); }
	 ruleLabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule Label
ruleLabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelAccess().getGroup()); }
		(rule__Label__Group__0)
		{ after(grammarAccess.getLabelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleButton
entryRuleButton
:
{ before(grammarAccess.getButtonRule()); }
	 ruleButton
{ after(grammarAccess.getButtonRule()); } 
	 EOF 
;

// Rule Button
ruleButton 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getButtonAccess().getGroup()); }
		(rule__Button__Group__0)
		{ after(grammarAccess.getButtonAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheckbox
entryRuleCheckbox
:
{ before(grammarAccess.getCheckboxRule()); }
	 ruleCheckbox
{ after(grammarAccess.getCheckboxRule()); } 
	 EOF 
;

// Rule Checkbox
ruleCheckbox 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckboxAccess().getGroup()); }
		(rule__Checkbox__Group__0)
		{ after(grammarAccess.getCheckboxAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getFrameParserRuleCall_0()); }
		ruleFrame
		{ after(grammarAccess.getTypeAccess().getFrameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getContainerParserRuleCall_1()); }
		ruleContainer
		{ after(grammarAccess.getTypeAccess().getContainerParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuiElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGuiElementAccess().getTextfieldParserRuleCall_0()); }
		ruleTextfield
		{ after(grammarAccess.getGuiElementAccess().getTextfieldParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getGuiElementAccess().getLabelParserRuleCall_1()); }
		ruleLabel
		{ after(grammarAccess.getGuiElementAccess().getLabelParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getGuiElementAccess().getButtonParserRuleCall_2()); }
		ruleButton
		{ after(grammarAccess.getGuiElementAccess().getButtonParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getGuiElementAccess().getCheckboxParserRuleCall_3()); }
		ruleCheckbox
		{ after(grammarAccess.getGuiElementAccess().getCheckboxParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getGuiElementAccess().getContainerReferenceParserRuleCall_4()); }
		ruleContainerReference
		{ after(grammarAccess.getGuiElementAccess().getContainerReferenceParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__0__Impl
	rule__Frame__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getFrameKeyword_0()); }
	'frame'
	{ after(grammarAccess.getFrameAccess().getFrameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__1__Impl
	rule__Frame__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getNameAssignment_1()); }
	(rule__Frame__NameAssignment_1)
	{ after(grammarAccess.getFrameAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__2__Impl
	rule__Frame__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getFrameAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__3__Impl
	rule__Frame__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getSizeAssignment_3()); }
	(rule__Frame__SizeAssignment_3)?
	{ after(grammarAccess.getFrameAccess().getSizeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__4__Impl
	rule__Frame__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getGuielementsAssignment_4()); }
	(rule__Frame__GuielementsAssignment_4)*
	{ after(grammarAccess.getFrameAccess().getGuielementsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Frame__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFrameAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getFrameAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__0__Impl
	rule__Container__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getContainerKeyword_0()); }
	'container'
	{ after(grammarAccess.getContainerAccess().getContainerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__1__Impl
	rule__Container__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getContainerNameAssignment_1()); }
	(rule__Container__ContainerNameAssignment_1)
	{ after(grammarAccess.getContainerAccess().getContainerNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__2__Impl
	rule__Container__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getContainerAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__3__Impl
	rule__Container__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getSizeAssignment_3()); }
	(rule__Container__SizeAssignment_3)?
	{ after(grammarAccess.getContainerAccess().getSizeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__4__Impl
	rule__Container__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getLayoutAssignment_4()); }
	(rule__Container__LayoutAssignment_4)?
	{ after(grammarAccess.getContainerAccess().getLayoutAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__5__Impl
	rule__Container__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getGuielementsAssignment_5()); }
	(rule__Container__GuielementsAssignment_5)*
	{ after(grammarAccess.getContainerAccess().getGuielementsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Container__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getContainerAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ContainerReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContainerReference__Group__0__Impl
	rule__ContainerReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerReferenceAccess().getReferenceNameAssignment_0()); }
	(rule__ContainerReference__ReferenceNameAssignment_0)
	{ after(grammarAccess.getContainerReferenceAccess().getReferenceNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ContainerReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainerReferenceAccess().getNameAssignment_1()); }
	(rule__ContainerReference__NameAssignment_1)
	{ after(grammarAccess.getContainerReferenceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Layout__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__0__Impl
	rule__Layout__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getLayoutKeyword_0()); }
	'layout='
	{ after(grammarAccess.getLayoutAccess().getLayoutKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Layout__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLayoutAccess().getLayoutAssignment_1()); }
	(rule__Layout__LayoutAssignment_1)
	{ after(grammarAccess.getLayoutAccess().getLayoutAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Size__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Size__Group__0__Impl
	rule__Size__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizeAccess().getWidthAssignment_0()); }
	(rule__Size__WidthAssignment_0)
	{ after(grammarAccess.getSizeAccess().getWidthAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Size__Group__1__Impl
	rule__Size__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizeAccess().getXKeyword_1()); }
	'x'
	{ after(grammarAccess.getSizeAccess().getXKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Size__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSizeAccess().getHeightAssignment_2()); }
	(rule__Size__HeightAssignment_2)
	{ after(grammarAccess.getSizeAccess().getHeightAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Text__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__0__Impl
	rule__Text__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getTextKeyword_0()); }
	'text='
	{ after(grammarAccess.getTextAccess().getTextKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Text__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextAccess().getTextAssignment_1()); }
	(rule__Text__TextAssignment_1)
	{ after(grammarAccess.getTextAccess().getTextAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CheckboxChoice__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckboxChoice__Group__0__Impl
	rule__CheckboxChoice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxChoice__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxChoiceAccess().getChoiceAssignment_0()); }
	(rule__CheckboxChoice__ChoiceAssignment_0)
	{ after(grammarAccess.getCheckboxChoiceAccess().getChoiceAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxChoice__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckboxChoice__Group__1__Impl
	rule__CheckboxChoice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxChoice__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxChoiceAccess().getXKeyword_1()); }
	('=x')?
	{ after(grammarAccess.getCheckboxChoiceAccess().getXKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxChoice__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CheckboxChoice__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxChoice__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxChoiceAccess().getCommaKeyword_2()); }
	(',')?
	{ after(grammarAccess.getCheckboxChoiceAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Textfield__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Textfield__Group__0__Impl
	rule__Textfield__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Textfield__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextfieldAccess().getTextfieldKeyword_0()); }
	'textfield'
	{ after(grammarAccess.getTextfieldAccess().getTextfieldKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Textfield__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Textfield__Group__1__Impl
	rule__Textfield__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Textfield__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextfieldAccess().getNameAssignment_1()); }
	(rule__Textfield__NameAssignment_1)
	{ after(grammarAccess.getTextfieldAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Textfield__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Textfield__Group__2__Impl
	rule__Textfield__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Textfield__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextfieldAccess().getSizeAssignment_2()); }
	(rule__Textfield__SizeAssignment_2)?
	{ after(grammarAccess.getTextfieldAccess().getSizeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Textfield__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Textfield__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Textfield__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTextfieldAccess().getTextAssignment_3()); }
	(rule__Textfield__TextAssignment_3)
	{ after(grammarAccess.getTextfieldAccess().getTextAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Label__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__0__Impl
	rule__Label__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getLabelKeyword_0()); }
	'label'
	{ after(grammarAccess.getLabelAccess().getLabelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__1__Impl
	rule__Label__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getNameAssignment_1()); }
	(rule__Label__NameAssignment_1)
	{ after(grammarAccess.getLabelAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__2__Impl
	rule__Label__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getSizeAssignment_2()); }
	(rule__Label__SizeAssignment_2)?
	{ after(grammarAccess.getLabelAccess().getSizeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabelAccess().getTextAssignment_3()); }
	(rule__Label__TextAssignment_3)
	{ after(grammarAccess.getLabelAccess().getTextAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Button__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__0__Impl
	rule__Button__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getButtonKeyword_0()); }
	'button'
	{ after(grammarAccess.getButtonAccess().getButtonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__1__Impl
	rule__Button__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getNameAssignment_1()); }
	(rule__Button__NameAssignment_1)
	{ after(grammarAccess.getButtonAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__2__Impl
	rule__Button__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getSizeAssignment_2()); }
	(rule__Button__SizeAssignment_2)?
	{ after(grammarAccess.getButtonAccess().getSizeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Button__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getButtonAccess().getTextAssignment_3()); }
	(rule__Button__TextAssignment_3)
	{ after(grammarAccess.getButtonAccess().getTextAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Checkbox__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checkbox__Group__0__Impl
	rule__Checkbox__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxAccess().getCheckboxKeyword_0()); }
	'checkbox'
	{ after(grammarAccess.getCheckboxAccess().getCheckboxKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checkbox__Group__1__Impl
	rule__Checkbox__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxAccess().getNameAssignment_1()); }
	(rule__Checkbox__NameAssignment_1)
	{ after(grammarAccess.getCheckboxAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checkbox__Group__2__Impl
	rule__Checkbox__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxAccess().getSizeAssignment_2()); }
	(rule__Checkbox__SizeAssignment_2)?
	{ after(grammarAccess.getCheckboxAccess().getSizeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Checkbox__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckboxAccess().getChoiceAssignment_3()); }
	(rule__Checkbox__ChoiceAssignment_3)
	{ after(grammarAccess.getCheckboxAccess().getChoiceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Domainmodel__ElementsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainmodelAccess().getElementsTypeParserRuleCall_0()); }
		ruleType
		{ after(grammarAccess.getDomainmodelAccess().getElementsTypeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFrameAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFrameAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__SizeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFrameAccess().getSizeSizeParserRuleCall_3_0()); }
		ruleSize
		{ after(grammarAccess.getFrameAccess().getSizeSizeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Frame__GuielementsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFrameAccess().getGuielementsGuiElementParserRuleCall_4_0()); }
		ruleGuiElement
		{ after(grammarAccess.getFrameAccess().getGuielementsGuiElementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__ContainerNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getContainerNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getContainerAccess().getContainerNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__SizeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getSizeSizeParserRuleCall_3_0()); }
		ruleSize
		{ after(grammarAccess.getContainerAccess().getSizeSizeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__LayoutAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getLayoutLayoutParserRuleCall_4_0()); }
		ruleLayout
		{ after(grammarAccess.getContainerAccess().getLayoutLayoutParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__GuielementsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerAccess().getGuielementsGuiElementParserRuleCall_5_0()); }
		ruleGuiElement
		{ after(grammarAccess.getContainerAccess().getGuielementsGuiElementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerReference__ReferenceNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerReferenceAccess().getReferenceNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getContainerReferenceAccess().getReferenceNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ContainerReference__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainerReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getContainerReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Layout__LayoutAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLayoutAccess().getLayoutIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLayoutAccess().getLayoutIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__WidthAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSizeAccess().getWidthINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getSizeAccess().getWidthINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Size__HeightAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSizeAccess().getHeightINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getSizeAccess().getHeightINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Text__TextAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextAccess().getTextIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTextAccess().getTextIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CheckboxChoice__ChoiceAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckboxChoiceAccess().getChoiceIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getCheckboxChoiceAccess().getChoiceIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Textfield__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextfieldAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTextfieldAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Textfield__SizeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextfieldAccess().getSizeSizeParserRuleCall_2_0()); }
		ruleSize
		{ after(grammarAccess.getTextfieldAccess().getSizeSizeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Textfield__TextAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTextfieldAccess().getTextTextParserRuleCall_3_0()); }
		ruleText
		{ after(grammarAccess.getTextfieldAccess().getTextTextParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getLabelAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__SizeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getSizeSizeParserRuleCall_2_0()); }
		ruleSize
		{ after(grammarAccess.getLabelAccess().getSizeSizeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__TextAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getTextTextParserRuleCall_3_0()); }
		ruleText
		{ after(grammarAccess.getLabelAccess().getTextTextParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getButtonAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__SizeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getSizeSizeParserRuleCall_2_0()); }
		ruleSize
		{ after(grammarAccess.getButtonAccess().getSizeSizeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Button__TextAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getButtonAccess().getTextTextParserRuleCall_3_0()); }
		ruleText
		{ after(grammarAccess.getButtonAccess().getTextTextParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckboxAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCheckboxAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__SizeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckboxAccess().getSizeSizeParserRuleCall_2_0()); }
		ruleSize
		{ after(grammarAccess.getCheckboxAccess().getSizeSizeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Checkbox__ChoiceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckboxAccess().getChoiceCheckboxChoiceParserRuleCall_3_0()); }
		ruleCheckboxChoice
		{ after(grammarAccess.getCheckboxAccess().getChoiceCheckboxChoiceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
