/*
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
			builder.put(grammarAccess.getLayoutAccess().getAlternatives(), "rule__Layout__Alternatives");
			builder.put(grammarAccess.getLayoutHorizontalEntryAccess().getAlternatives(), "rule__LayoutHorizontalEntry__Alternatives");
			builder.put(grammarAccess.getLayoutVerticalEntryAccess().getAlternatives(), "rule__LayoutVerticalEntry__Alternatives");
			builder.put(grammarAccess.getGuiElementAccess().getAlternatives(), "rule__GuiElement__Alternatives");
			builder.put(grammarAccess.getCHECKEDAccess().getAlternatives(), "rule__CHECKED__Alternatives");
			builder.put(grammarAccess.getDomainmodelAccess().getGroup(), "rule__Domainmodel__Group__0");
			builder.put(grammarAccess.getFrameAccess().getGroup(), "rule__Frame__Group__0");
			builder.put(grammarAccess.getContainerAccess().getGroup(), "rule__Container__Group__0");
			builder.put(grammarAccess.getLayoutHorizontalAccess().getGroup(), "rule__LayoutHorizontal__Group__0");
			builder.put(grammarAccess.getLayoutVerticalAccess().getGroup(), "rule__LayoutVertical__Group__0");
			builder.put(grammarAccess.getLayoutPositionAccess().getGroup(), "rule__LayoutPosition__Group__0");
			builder.put(grammarAccess.getLayoutPositionEntryAccess().getGroup(), "rule__LayoutPositionEntry__Group__0");
			builder.put(grammarAccess.getFixedAccess().getGroup(), "rule__Fixed__Group__0");
			builder.put(grammarAccess.getSpaceAccess().getGroup(), "rule__Space__Group__0");
			builder.put(grammarAccess.getPositionValueAccess().getGroup(), "rule__PositionValue__Group__0");
			builder.put(grammarAccess.getSizeAccess().getGroup(), "rule__Size__Group__0");
			builder.put(grammarAccess.getContainerReferenceAccess().getGroup(), "rule__ContainerReference__Group__0");
			builder.put(grammarAccess.getTextfieldAccess().getGroup(), "rule__Textfield__Group__0");
			builder.put(grammarAccess.getLabelAccess().getGroup(), "rule__Label__Group__0");
			builder.put(grammarAccess.getButtonAccess().getGroup(), "rule__Button__Group__0");
			builder.put(grammarAccess.getCheckboxAccess().getGroup(), "rule__Checkbox__Group__0");
			builder.put(grammarAccess.getRadiobuttonAccess().getGroup(), "rule__Radiobutton__Group__0");
			builder.put(grammarAccess.getDomainmodelAccess().getMainAssignment_1(), "rule__Domainmodel__MainAssignment_1");
			builder.put(grammarAccess.getDomainmodelAccess().getElementsAssignment_2(), "rule__Domainmodel__ElementsAssignment_2");
			builder.put(grammarAccess.getFrameAccess().getNameAssignment_1(), "rule__Frame__NameAssignment_1");
			builder.put(grammarAccess.getFrameAccess().getSizeAssignment_2(), "rule__Frame__SizeAssignment_2");
			builder.put(grammarAccess.getFrameAccess().getLayoutAssignment_3(), "rule__Frame__LayoutAssignment_3");
			builder.put(grammarAccess.getContainerAccess().getNameAssignment_1(), "rule__Container__NameAssignment_1");
			builder.put(grammarAccess.getContainerAccess().getSizeAssignment_2(), "rule__Container__SizeAssignment_2");
			builder.put(grammarAccess.getContainerAccess().getLayoutAssignment_3(), "rule__Container__LayoutAssignment_3");
			builder.put(grammarAccess.getLayoutHorizontalAccess().getFixedAssignment_1(), "rule__LayoutHorizontal__FixedAssignment_1");
			builder.put(grammarAccess.getLayoutHorizontalAccess().getEntriesAssignment_3(), "rule__LayoutHorizontal__EntriesAssignment_3");
			builder.put(grammarAccess.getLayoutHorizontalEntryAccess().getSpaceAssignment_0(), "rule__LayoutHorizontalEntry__SpaceAssignment_0");
			builder.put(grammarAccess.getLayoutHorizontalEntryAccess().getGuielementAssignment_1(), "rule__LayoutHorizontalEntry__GuielementAssignment_1");
			builder.put(grammarAccess.getLayoutVerticalAccess().getFixedAssignment_1(), "rule__LayoutVertical__FixedAssignment_1");
			builder.put(grammarAccess.getLayoutVerticalAccess().getEntriesAssignment_3(), "rule__LayoutVertical__EntriesAssignment_3");
			builder.put(grammarAccess.getLayoutVerticalEntryAccess().getSpaceAssignment_0(), "rule__LayoutVerticalEntry__SpaceAssignment_0");
			builder.put(grammarAccess.getLayoutVerticalEntryAccess().getGuielementAssignment_1(), "rule__LayoutVerticalEntry__GuielementAssignment_1");
			builder.put(grammarAccess.getLayoutPositionAccess().getEntriesAssignment_2(), "rule__LayoutPosition__EntriesAssignment_2");
			builder.put(grammarAccess.getLayoutPositionEntryAccess().getPositionAssignment_1(), "rule__LayoutPositionEntry__PositionAssignment_1");
			builder.put(grammarAccess.getLayoutPositionEntryAccess().getGuielementAssignment_3(), "rule__LayoutPositionEntry__GuielementAssignment_3");
			builder.put(grammarAccess.getFixedAccess().getFixedAssignment_1(), "rule__Fixed__FixedAssignment_1");
			builder.put(grammarAccess.getSpaceAccess().getSpaceAssignment_1(), "rule__Space__SpaceAssignment_1");
			builder.put(grammarAccess.getPositionValueAccess().getPosXAssignment_0(), "rule__PositionValue__PosXAssignment_0");
			builder.put(grammarAccess.getPositionValueAccess().getPosYAssignment_2(), "rule__PositionValue__PosYAssignment_2");
			builder.put(grammarAccess.getSizeAccess().getWidthAssignment_0(), "rule__Size__WidthAssignment_0");
			builder.put(grammarAccess.getSizeAccess().getHeightAssignment_2(), "rule__Size__HeightAssignment_2");
			builder.put(grammarAccess.getContainerReferenceAccess().getReferenceNameAssignment_0(), "rule__ContainerReference__ReferenceNameAssignment_0");
			builder.put(grammarAccess.getContainerReferenceAccess().getNameAssignment_1(), "rule__ContainerReference__NameAssignment_1");
			builder.put(grammarAccess.getTextAccess().getTextAssignment(), "rule__Text__TextAssignment");
			builder.put(grammarAccess.getTextfieldAccess().getNameAssignment_1(), "rule__Textfield__NameAssignment_1");
			builder.put(grammarAccess.getTextfieldAccess().getSizeAssignment_2(), "rule__Textfield__SizeAssignment_2");
			builder.put(grammarAccess.getTextfieldAccess().getTextAssignment_3(), "rule__Textfield__TextAssignment_3");
			builder.put(grammarAccess.getLabelAccess().getNameAssignment_1(), "rule__Label__NameAssignment_1");
			builder.put(grammarAccess.getLabelAccess().getSizeAssignment_2(), "rule__Label__SizeAssignment_2");
			builder.put(grammarAccess.getLabelAccess().getTextAssignment_3(), "rule__Label__TextAssignment_3");
			builder.put(grammarAccess.getButtonAccess().getNameAssignment_1(), "rule__Button__NameAssignment_1");
			builder.put(grammarAccess.getButtonAccess().getSizeAssignment_2(), "rule__Button__SizeAssignment_2");
			builder.put(grammarAccess.getButtonAccess().getTextAssignment_3(), "rule__Button__TextAssignment_3");
			builder.put(grammarAccess.getCheckboxAccess().getNameAssignment_1(), "rule__Checkbox__NameAssignment_1");
			builder.put(grammarAccess.getCheckboxAccess().getSizeAssignment_2(), "rule__Checkbox__SizeAssignment_2");
			builder.put(grammarAccess.getCheckboxAccess().getCheckedAssignment_3(), "rule__Checkbox__CheckedAssignment_3");
			builder.put(grammarAccess.getCheckboxAccess().getTextAssignment_4(), "rule__Checkbox__TextAssignment_4");
			builder.put(grammarAccess.getRadiobuttonAccess().getGroupAssignment_1(), "rule__Radiobutton__GroupAssignment_1");
			builder.put(grammarAccess.getRadiobuttonAccess().getNameAssignment_2(), "rule__Radiobutton__NameAssignment_2");
			builder.put(grammarAccess.getRadiobuttonAccess().getSizeAssignment_3(), "rule__Radiobutton__SizeAssignment_3");
			builder.put(grammarAccess.getRadiobuttonAccess().getCheckedAssignment_4(), "rule__Radiobutton__CheckedAssignment_4");
			builder.put(grammarAccess.getRadiobuttonAccess().getTextAssignment_5(), "rule__Radiobutton__TextAssignment_5");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
