/*
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalMyDslParser;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

public class MyDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
			builder.put(grammarAccess.getGuiElementAccess().getAlternatives(), "rule__GuiElement__Alternatives");
			builder.put(grammarAccess.getFrameAccess().getGroup(), "rule__Frame__Group__0");
			builder.put(grammarAccess.getContainerAccess().getGroup(), "rule__Container__Group__0");
			builder.put(grammarAccess.getContainerReferenceAccess().getGroup(), "rule__ContainerReference__Group__0");
			builder.put(grammarAccess.getLayoutAccess().getGroup(), "rule__Layout__Group__0");
			builder.put(grammarAccess.getPositionAccess().getGroup(), "rule__Position__Group__0");
			builder.put(grammarAccess.getSizeAccess().getGroup(), "rule__Size__Group__0");
			builder.put(grammarAccess.getTextAccess().getGroup(), "rule__Text__Group__0");
			builder.put(grammarAccess.getCheckboxChoiceAccess().getGroup(), "rule__CheckboxChoice__Group__0");
			builder.put(grammarAccess.getTextfieldAccess().getGroup(), "rule__Textfield__Group__0");
			builder.put(grammarAccess.getLabelAccess().getGroup(), "rule__Label__Group__0");
			builder.put(grammarAccess.getButtonAccess().getGroup(), "rule__Button__Group__0");
			builder.put(grammarAccess.getCheckboxAccess().getGroup(), "rule__Checkbox__Group__0");
			builder.put(grammarAccess.getDomainmodelAccess().getElementsAssignment(), "rule__Domainmodel__ElementsAssignment");
			builder.put(grammarAccess.getFrameAccess().getNameAssignment_1(), "rule__Frame__NameAssignment_1");
			builder.put(grammarAccess.getFrameAccess().getSizeAssignment_3(), "rule__Frame__SizeAssignment_3");
			builder.put(grammarAccess.getFrameAccess().getGuielementsAssignment_4(), "rule__Frame__GuielementsAssignment_4");
			builder.put(grammarAccess.getContainerAccess().getContainerNameAssignment_1(), "rule__Container__ContainerNameAssignment_1");
			builder.put(grammarAccess.getContainerAccess().getSizeAssignment_3(), "rule__Container__SizeAssignment_3");
			builder.put(grammarAccess.getContainerAccess().getLayoutAssignment_4(), "rule__Container__LayoutAssignment_4");
			builder.put(grammarAccess.getContainerAccess().getGuielementsAssignment_5(), "rule__Container__GuielementsAssignment_5");
			builder.put(grammarAccess.getContainerReferenceAccess().getReferenceNameAssignment_0(), "rule__ContainerReference__ReferenceNameAssignment_0");
			builder.put(grammarAccess.getContainerReferenceAccess().getNameAssignment_1(), "rule__ContainerReference__NameAssignment_1");
			builder.put(grammarAccess.getLayoutAccess().getLayoutAssignment_1(), "rule__Layout__LayoutAssignment_1");
			builder.put(grammarAccess.getPositionAccess().getPosXAssignment_0(), "rule__Position__PosXAssignment_0");
			builder.put(grammarAccess.getPositionAccess().getPosYAssignment_2(), "rule__Position__PosYAssignment_2");
			builder.put(grammarAccess.getSizeAccess().getWidthAssignment_0(), "rule__Size__WidthAssignment_0");
			builder.put(grammarAccess.getSizeAccess().getHeightAssignment_2(), "rule__Size__HeightAssignment_2");
			builder.put(grammarAccess.getTextAccess().getTextAssignment_1(), "rule__Text__TextAssignment_1");
			builder.put(grammarAccess.getCheckboxChoiceAccess().getChoiceAssignment_0(), "rule__CheckboxChoice__ChoiceAssignment_0");
			builder.put(grammarAccess.getTextfieldAccess().getNameAssignment_1(), "rule__Textfield__NameAssignment_1");
			builder.put(grammarAccess.getTextfieldAccess().getSizeAssignment_2(), "rule__Textfield__SizeAssignment_2");
			builder.put(grammarAccess.getTextfieldAccess().getTextAssignment_3(), "rule__Textfield__TextAssignment_3");
			builder.put(grammarAccess.getLabelAccess().getNameAssignment_1(), "rule__Label__NameAssignment_1");
			builder.put(grammarAccess.getLabelAccess().getSizeAssignment_2(), "rule__Label__SizeAssignment_2");
			builder.put(grammarAccess.getLabelAccess().getTextAssignment_3(), "rule__Label__TextAssignment_3");
			builder.put(grammarAccess.getButtonAccess().getNameAssignment_1(), "rule__Button__NameAssignment_1");
			builder.put(grammarAccess.getButtonAccess().getSizeAssignment_2(), "rule__Button__SizeAssignment_2");
			builder.put(grammarAccess.getButtonAccess().getTextAssignment_3(), "rule__Button__TextAssignment_3");
			builder.put(grammarAccess.getCheckboxAccess().getNameAssignment_1(), "rule__Checkbox__NameAssignment_1");
			builder.put(grammarAccess.getCheckboxAccess().getSizeAssignment_2(), "rule__Checkbox__SizeAssignment_2");
			builder.put(grammarAccess.getCheckboxAccess().getChoiceAssignment_3(), "rule__Checkbox__ChoiceAssignment_3");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyDslGrammarAccess grammarAccess;

	@Override
	protected InternalMyDslParser createParser() {
		InternalMyDslParser result = new InternalMyDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
