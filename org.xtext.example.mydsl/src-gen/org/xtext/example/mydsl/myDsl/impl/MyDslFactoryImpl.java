/**
 * generated by Xtext 2.19.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.mydsl.myDsl.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyDslFactoryImpl extends EFactoryImpl implements MyDslFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MyDslFactory init()
  {
    try
    {
      MyDslFactory theMyDslFactory = (MyDslFactory)EPackage.Registry.INSTANCE.getEFactory(MyDslPackage.eNS_URI);
      if (theMyDslFactory != null)
      {
        return theMyDslFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MyDslFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MyDslFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MyDslPackage.DOMAINMODEL: return createDomainmodel();
      case MyDslPackage.TYPE: return createType();
      case MyDslPackage.FRAME: return createFrame();
      case MyDslPackage.CONTAINER: return createContainer();
      case MyDslPackage.LAYOUT: return createLayout();
      case MyDslPackage.LAYOUT_HORIZONTAL: return createLayoutHorizontal();
      case MyDslPackage.LAYOUT_HORIZONTAL_ENTRY: return createLayoutHorizontalEntry();
      case MyDslPackage.LAYOUT_VERTICAL: return createLayoutVertical();
      case MyDslPackage.LAYOUT_VERTICAL_ENTRY: return createLayoutVerticalEntry();
      case MyDslPackage.LAYOUT_POSITION: return createLayoutPosition();
      case MyDslPackage.LAYOUT_POSITION_ENTRY: return createLayoutPositionEntry();
      case MyDslPackage.FIXED: return createFixed();
      case MyDslPackage.SPACE: return createSpace();
      case MyDslPackage.POSITION_VALUE: return createPositionValue();
      case MyDslPackage.SIZE: return createSize();
      case MyDslPackage.GUI_ELEMENT: return createGuiElement();
      case MyDslPackage.CONTAINER_REFERENCE: return createContainerReference();
      case MyDslPackage.TEXT: return createText();
      case MyDslPackage.TEXTFIELD: return createTextfield();
      case MyDslPackage.LABEL: return createLabel();
      case MyDslPackage.BUTTON: return createButton();
      case MyDslPackage.CHECKBOX: return createCheckbox();
      case MyDslPackage.RADIOBUTTON: return createRadiobutton();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Domainmodel createDomainmodel()
  {
    DomainmodelImpl domainmodel = new DomainmodelImpl();
    return domainmodel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Type createType()
  {
    TypeImpl type = new TypeImpl();
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Frame createFrame()
  {
    FrameImpl frame = new FrameImpl();
    return frame;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public org.xtext.example.mydsl.myDsl.Container createContainer()
  {
    ContainerImpl container = new ContainerImpl();
    return container;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Layout createLayout()
  {
    LayoutImpl layout = new LayoutImpl();
    return layout;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LayoutHorizontal createLayoutHorizontal()
  {
    LayoutHorizontalImpl layoutHorizontal = new LayoutHorizontalImpl();
    return layoutHorizontal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LayoutHorizontalEntry createLayoutHorizontalEntry()
  {
    LayoutHorizontalEntryImpl layoutHorizontalEntry = new LayoutHorizontalEntryImpl();
    return layoutHorizontalEntry;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LayoutVertical createLayoutVertical()
  {
    LayoutVerticalImpl layoutVertical = new LayoutVerticalImpl();
    return layoutVertical;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LayoutVerticalEntry createLayoutVerticalEntry()
  {
    LayoutVerticalEntryImpl layoutVerticalEntry = new LayoutVerticalEntryImpl();
    return layoutVerticalEntry;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LayoutPosition createLayoutPosition()
  {
    LayoutPositionImpl layoutPosition = new LayoutPositionImpl();
    return layoutPosition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public LayoutPositionEntry createLayoutPositionEntry()
  {
    LayoutPositionEntryImpl layoutPositionEntry = new LayoutPositionEntryImpl();
    return layoutPositionEntry;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Fixed createFixed()
  {
    FixedImpl fixed = new FixedImpl();
    return fixed;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Space createSpace()
  {
    SpaceImpl space = new SpaceImpl();
    return space;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PositionValue createPositionValue()
  {
    PositionValueImpl positionValue = new PositionValueImpl();
    return positionValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Size createSize()
  {
    SizeImpl size = new SizeImpl();
    return size;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public GuiElement createGuiElement()
  {
    GuiElementImpl guiElement = new GuiElementImpl();
    return guiElement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ContainerReference createContainerReference()
  {
    ContainerReferenceImpl containerReference = new ContainerReferenceImpl();
    return containerReference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Text createText()
  {
    TextImpl text = new TextImpl();
    return text;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Textfield createTextfield()
  {
    TextfieldImpl textfield = new TextfieldImpl();
    return textfield;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Label createLabel()
  {
    LabelImpl label = new LabelImpl();
    return label;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Button createButton()
  {
    ButtonImpl button = new ButtonImpl();
    return button;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Checkbox createCheckbox()
  {
    CheckboxImpl checkbox = new CheckboxImpl();
    return checkbox;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Radiobutton createRadiobutton()
  {
    RadiobuttonImpl radiobutton = new RadiobuttonImpl();
    return radiobutton;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MyDslPackage getMyDslPackage()
  {
    return (MyDslPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MyDslPackage getPackage()
  {
    return MyDslPackage.eINSTANCE;
  }

} //MyDslFactoryImpl
